// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: im_message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HWL_IM_Core.Protocol {

  /// <summary>Holder for reflection information generated from im_message.proto</summary>
  public static partial class ImMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for im_message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ImMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBpbV9tZXNzYWdlLnByb3RvEgxpbWJhc2ljcHJvdG8i6wIKEEltTWVzc2Fn",
            "ZUNvbnRleHQSKQoEdHlwZRgKIAEoDjIbLmltYmFzaWNwcm90by5JbU1lc3Nh",
            "Z2VUeXBlEisKBGhlYWQYFCABKAsyGy5pbWJhc2ljcHJvdG8uSW1NZXNzYWdl",
            "SGVhZEgAEjMKCHJlc3BvbnNlGB4gASgLMh8uaW1iYXNpY3Byb3RvLkltTWVz",
            "c2FnZVJlc3BvbnNlSAASPgoPdmFsaWRhdGVNZXNzYWdlGCggASgLMiMuaW1i",
            "YXNpY3Byb3RvLkltVXNlclZhbGlkYXRlTWVzc2FnZUgBEjoKD3VzZXJDaGF0",
            "TWVzc2FnZRgyIAEoCzIfLmltYmFzaWNwcm90by5JbVVzZXJDaGF0TWVzc2Fn",
            "ZUgBEjwKEGdyb3VwQ2hhdE1lc3NhZ2UYPCABKAsyIC5pbWJhc2ljcHJvdG8u",
            "SW1Hcm91cENoYXRNZXNzYWdlSAFCBwoFYm9keTFCBwoFYm9keTIiZgoNSW1N",
            "ZXNzYWdlSGVhZBIRCgl0aW1lc3RhbXAYCiABKAQSDgoGY2xpZW50GBQgASgJ",
            "Eg8KB3Nlc3Npb24YHiABKAkSEAoIbGFuZ3VhZ2UYKCABKAkSDwoHdmVyc2lv",
            "bhgyIAEoCSJ6ChFJbU1lc3NhZ2VSZXNwb25zZRImCgZzdGF0dXMYCiABKA4y",
            "Fi5pbWJhc2ljcHJvdG8uSW1TdGF0dXMSDgoGb3V0cHV0GBQgASgJEi0KBnNv",
            "dXJjZRgeIAEoDjIdLmltYmFzaWNwcm90by5JbU1lc3NhZ2VTb3VyY2UiNgoV",
            "SW1Vc2VyVmFsaWRhdGVNZXNzYWdlEg4KBnVzZXJJZBgeIAEoBBINCgV0b2tl",
            "bhgoIAEoCSJ2ChFJbVVzZXJDaGF0TWVzc2FnZRISCgpmcm9tVXNlcklkGAog",
            "ASgEEhAKCHRvVXNlcklkGBQgASgEEhMKC2NvbnRlbnRUeXBlGB4gASgJEhMK",
            "C2NvbnRlbnRCb2R5GCggASgJEhEKCWJ1aWxkVGltZRgyIAEoBCJ2ChJJbUdy",
            "b3VwQ2hhdE1lc3NhZ2USEgoKZnJvbVVzZXJJZBgKIAEoBBIPCgd0b0dyb3Vw",
            "GBQgASgJEhMKC2NvbnRlbnRUeXBlGB4gASgJEhMKC2NvbnRlbnRCb2R5GCgg",
            "ASgJEhEKCWJ1aWxkVGltZRgyIAEoBCpgCg1JbU1lc3NhZ2VUeXBlEgkKBUJh",
            "c2ljEAASDAoIVmFsaWRhdGUQARIICgRVc2VyEAISCQoFR3JvdXAQAxIICgRQ",
            "aW5nEAQSCAoEUG9uZxA8Eg0KCUNsaWVudEFjaxBGKjgKCEltU3RhdHVzEgsK",
            "B1N1Y2Nlc3MQABILCgdGYWlsdXJlEAESEgoOU2Vzc2lvbkludmFsaWQQAipC",
            "Cg9JbU1lc3NhZ2VTb3VyY2USCwoHSW5zdGFudBAAEgsKB09mZmxpbmUQARIJ",
            "CgVSZXRyeRACEgoKBlVua25vdxADQjEKFmNvbS5od2wuaW1jb3JlLmltcHJv",
            "dG9QAaoCFEhXTF9JTV9Db3JlLlByb3RvY29sYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HWL_IM_Core.Protocol.ImMessageType), typeof(global::HWL_IM_Core.Protocol.ImStatus), typeof(global::HWL_IM_Core.Protocol.ImMessageSource), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL_IM_Core.Protocol.ImMessageContext), global::HWL_IM_Core.Protocol.ImMessageContext.Parser, new[]{ "Type", "Head", "Response", "ValidateMessage", "UserChatMessage", "GroupChatMessage" }, new[]{ "Body1", "Body2" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL_IM_Core.Protocol.ImMessageHead), global::HWL_IM_Core.Protocol.ImMessageHead.Parser, new[]{ "Timestamp", "Client", "Session", "Language", "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL_IM_Core.Protocol.ImMessageResponse), global::HWL_IM_Core.Protocol.ImMessageResponse.Parser, new[]{ "Status", "Output", "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL_IM_Core.Protocol.ImUserValidateMessage), global::HWL_IM_Core.Protocol.ImUserValidateMessage.Parser, new[]{ "UserId", "Token" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL_IM_Core.Protocol.ImUserChatMessage), global::HWL_IM_Core.Protocol.ImUserChatMessage.Parser, new[]{ "FromUserId", "ToUserId", "ContentType", "ContentBody", "BuildTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL_IM_Core.Protocol.ImGroupChatMessage), global::HWL_IM_Core.Protocol.ImGroupChatMessage.Parser, new[]{ "FromUserId", "ToGroup", "ContentType", "ContentBody", "BuildTime" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ImMessageType {
    [pbr::OriginalName("Basic")] Basic = 0,
    [pbr::OriginalName("Validate")] Validate = 1,
    [pbr::OriginalName("User")] User = 2,
    [pbr::OriginalName("Group")] Group = 3,
    [pbr::OriginalName("Ping")] Ping = 4,
    [pbr::OriginalName("Pong")] Pong = 60,
    [pbr::OriginalName("ClientAck")] ClientAck = 70,
  }

  public enum ImStatus {
    [pbr::OriginalName("Success")] Success = 0,
    [pbr::OriginalName("Failure")] Failure = 1,
    [pbr::OriginalName("SessionInvalid")] SessionInvalid = 2,
  }

  public enum ImMessageSource {
    [pbr::OriginalName("Instant")] Instant = 0,
    [pbr::OriginalName("Offline")] Offline = 1,
    [pbr::OriginalName("Retry")] Retry = 2,
    [pbr::OriginalName("Unknow")] Unknow = 3,
  }

  #endregion

  #region Messages
  public sealed partial class ImMessageContext : pb::IMessage<ImMessageContext> {
    private static readonly pb::MessageParser<ImMessageContext> _parser = new pb::MessageParser<ImMessageContext>(() => new ImMessageContext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImMessageContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL_IM_Core.Protocol.ImMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageContext(ImMessageContext other) : this() {
      type_ = other.type_;
      switch (other.Body1Case) {
        case Body1OneofCase.Head:
          Head = other.Head.Clone();
          break;
        case Body1OneofCase.Response:
          Response = other.Response.Clone();
          break;
      }

      switch (other.Body2Case) {
        case Body2OneofCase.ValidateMessage:
          ValidateMessage = other.ValidateMessage.Clone();
          break;
        case Body2OneofCase.UserChatMessage:
          UserChatMessage = other.UserChatMessage.Clone();
          break;
        case Body2OneofCase.GroupChatMessage:
          GroupChatMessage = other.GroupChatMessage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageContext Clone() {
      return new ImMessageContext(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 10;
    private global::HWL_IM_Core.Protocol.ImMessageType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL_IM_Core.Protocol.ImMessageType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "head" field.</summary>
    public const int HeadFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL_IM_Core.Protocol.ImMessageHead Head {
      get { return body1Case_ == Body1OneofCase.Head ? (global::HWL_IM_Core.Protocol.ImMessageHead) body1_ : null; }
      set {
        body1_ = value;
        body1Case_ = value == null ? Body1OneofCase.None : Body1OneofCase.Head;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 30;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL_IM_Core.Protocol.ImMessageResponse Response {
      get { return body1Case_ == Body1OneofCase.Response ? (global::HWL_IM_Core.Protocol.ImMessageResponse) body1_ : null; }
      set {
        body1_ = value;
        body1Case_ = value == null ? Body1OneofCase.None : Body1OneofCase.Response;
      }
    }

    /// <summary>Field number for the "validateMessage" field.</summary>
    public const int ValidateMessageFieldNumber = 40;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL_IM_Core.Protocol.ImUserValidateMessage ValidateMessage {
      get { return body2Case_ == Body2OneofCase.ValidateMessage ? (global::HWL_IM_Core.Protocol.ImUserValidateMessage) body2_ : null; }
      set {
        body2_ = value;
        body2Case_ = value == null ? Body2OneofCase.None : Body2OneofCase.ValidateMessage;
      }
    }

    /// <summary>Field number for the "userChatMessage" field.</summary>
    public const int UserChatMessageFieldNumber = 50;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL_IM_Core.Protocol.ImUserChatMessage UserChatMessage {
      get { return body2Case_ == Body2OneofCase.UserChatMessage ? (global::HWL_IM_Core.Protocol.ImUserChatMessage) body2_ : null; }
      set {
        body2_ = value;
        body2Case_ = value == null ? Body2OneofCase.None : Body2OneofCase.UserChatMessage;
      }
    }

    /// <summary>Field number for the "groupChatMessage" field.</summary>
    public const int GroupChatMessageFieldNumber = 60;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL_IM_Core.Protocol.ImGroupChatMessage GroupChatMessage {
      get { return body2Case_ == Body2OneofCase.GroupChatMessage ? (global::HWL_IM_Core.Protocol.ImGroupChatMessage) body2_ : null; }
      set {
        body2_ = value;
        body2Case_ = value == null ? Body2OneofCase.None : Body2OneofCase.GroupChatMessage;
      }
    }

    private object body1_;
    /// <summary>Enum of possible cases for the "body1" oneof.</summary>
    public enum Body1OneofCase {
      None = 0,
      Head = 20,
      Response = 30,
    }
    private Body1OneofCase body1Case_ = Body1OneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Body1OneofCase Body1Case {
      get { return body1Case_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBody1() {
      body1Case_ = Body1OneofCase.None;
      body1_ = null;
    }

    private object body2_;
    /// <summary>Enum of possible cases for the "body2" oneof.</summary>
    public enum Body2OneofCase {
      None = 0,
      ValidateMessage = 40,
      UserChatMessage = 50,
      GroupChatMessage = 60,
    }
    private Body2OneofCase body2Case_ = Body2OneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Body2OneofCase Body2Case {
      get { return body2Case_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBody2() {
      body2Case_ = Body2OneofCase.None;
      body2_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImMessageContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImMessageContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Head, other.Head)) return false;
      if (!object.Equals(Response, other.Response)) return false;
      if (!object.Equals(ValidateMessage, other.ValidateMessage)) return false;
      if (!object.Equals(UserChatMessage, other.UserChatMessage)) return false;
      if (!object.Equals(GroupChatMessage, other.GroupChatMessage)) return false;
      if (Body1Case != other.Body1Case) return false;
      if (Body2Case != other.Body2Case) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (body1Case_ == Body1OneofCase.Head) hash ^= Head.GetHashCode();
      if (body1Case_ == Body1OneofCase.Response) hash ^= Response.GetHashCode();
      if (body2Case_ == Body2OneofCase.ValidateMessage) hash ^= ValidateMessage.GetHashCode();
      if (body2Case_ == Body2OneofCase.UserChatMessage) hash ^= UserChatMessage.GetHashCode();
      if (body2Case_ == Body2OneofCase.GroupChatMessage) hash ^= GroupChatMessage.GetHashCode();
      hash ^= (int) body1Case_;
      hash ^= (int) body2Case_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Type);
      }
      if (body1Case_ == Body1OneofCase.Head) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Head);
      }
      if (body1Case_ == Body1OneofCase.Response) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Response);
      }
      if (body2Case_ == Body2OneofCase.ValidateMessage) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(ValidateMessage);
      }
      if (body2Case_ == Body2OneofCase.UserChatMessage) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(UserChatMessage);
      }
      if (body2Case_ == Body2OneofCase.GroupChatMessage) {
        output.WriteRawTag(226, 3);
        output.WriteMessage(GroupChatMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (body1Case_ == Body1OneofCase.Head) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Head);
      }
      if (body1Case_ == Body1OneofCase.Response) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (body2Case_ == Body2OneofCase.ValidateMessage) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ValidateMessage);
      }
      if (body2Case_ == Body2OneofCase.UserChatMessage) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UserChatMessage);
      }
      if (body2Case_ == Body2OneofCase.GroupChatMessage) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GroupChatMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImMessageContext other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      switch (other.Body1Case) {
        case Body1OneofCase.Head:
          if (Head == null) {
            Head = new global::HWL_IM_Core.Protocol.ImMessageHead();
          }
          Head.MergeFrom(other.Head);
          break;
        case Body1OneofCase.Response:
          if (Response == null) {
            Response = new global::HWL_IM_Core.Protocol.ImMessageResponse();
          }
          Response.MergeFrom(other.Response);
          break;
      }

      switch (other.Body2Case) {
        case Body2OneofCase.ValidateMessage:
          if (ValidateMessage == null) {
            ValidateMessage = new global::HWL_IM_Core.Protocol.ImUserValidateMessage();
          }
          ValidateMessage.MergeFrom(other.ValidateMessage);
          break;
        case Body2OneofCase.UserChatMessage:
          if (UserChatMessage == null) {
            UserChatMessage = new global::HWL_IM_Core.Protocol.ImUserChatMessage();
          }
          UserChatMessage.MergeFrom(other.UserChatMessage);
          break;
        case Body2OneofCase.GroupChatMessage:
          if (GroupChatMessage == null) {
            GroupChatMessage = new global::HWL_IM_Core.Protocol.ImGroupChatMessage();
          }
          GroupChatMessage.MergeFrom(other.GroupChatMessage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 80: {
            type_ = (global::HWL_IM_Core.Protocol.ImMessageType) input.ReadEnum();
            break;
          }
          case 162: {
            global::HWL_IM_Core.Protocol.ImMessageHead subBuilder = new global::HWL_IM_Core.Protocol.ImMessageHead();
            if (body1Case_ == Body1OneofCase.Head) {
              subBuilder.MergeFrom(Head);
            }
            input.ReadMessage(subBuilder);
            Head = subBuilder;
            break;
          }
          case 242: {
            global::HWL_IM_Core.Protocol.ImMessageResponse subBuilder = new global::HWL_IM_Core.Protocol.ImMessageResponse();
            if (body1Case_ == Body1OneofCase.Response) {
              subBuilder.MergeFrom(Response);
            }
            input.ReadMessage(subBuilder);
            Response = subBuilder;
            break;
          }
          case 322: {
            global::HWL_IM_Core.Protocol.ImUserValidateMessage subBuilder = new global::HWL_IM_Core.Protocol.ImUserValidateMessage();
            if (body2Case_ == Body2OneofCase.ValidateMessage) {
              subBuilder.MergeFrom(ValidateMessage);
            }
            input.ReadMessage(subBuilder);
            ValidateMessage = subBuilder;
            break;
          }
          case 402: {
            global::HWL_IM_Core.Protocol.ImUserChatMessage subBuilder = new global::HWL_IM_Core.Protocol.ImUserChatMessage();
            if (body2Case_ == Body2OneofCase.UserChatMessage) {
              subBuilder.MergeFrom(UserChatMessage);
            }
            input.ReadMessage(subBuilder);
            UserChatMessage = subBuilder;
            break;
          }
          case 482: {
            global::HWL_IM_Core.Protocol.ImGroupChatMessage subBuilder = new global::HWL_IM_Core.Protocol.ImGroupChatMessage();
            if (body2Case_ == Body2OneofCase.GroupChatMessage) {
              subBuilder.MergeFrom(GroupChatMessage);
            }
            input.ReadMessage(subBuilder);
            GroupChatMessage = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImMessageHead : pb::IMessage<ImMessageHead> {
    private static readonly pb::MessageParser<ImMessageHead> _parser = new pb::MessageParser<ImMessageHead>(() => new ImMessageHead());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImMessageHead> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL_IM_Core.Protocol.ImMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageHead() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageHead(ImMessageHead other) : this() {
      timestamp_ = other.timestamp_;
      client_ = other.client_;
      session_ = other.session_;
      language_ = other.language_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageHead Clone() {
      return new ImMessageHead(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 10;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 20;
    private string client_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Client {
      get { return client_; }
      set {
        client_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 30;
    private string session_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 40;
    private string language_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 50;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImMessageHead);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImMessageHead other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (Client != other.Client) return false;
      if (Session != other.Session) return false;
      if (Language != other.Language) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (Client.Length != 0) hash ^= Client.GetHashCode();
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(Timestamp);
      }
      if (Client.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Client);
      }
      if (Session.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(Session);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(194, 2);
        output.WriteString(Language);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(146, 3);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (Client.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Client);
      }
      if (Session.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Session);
      }
      if (Language.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (Version.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImMessageHead other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.Client.Length != 0) {
        Client = other.Client;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 80: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 162: {
            Client = input.ReadString();
            break;
          }
          case 242: {
            Session = input.ReadString();
            break;
          }
          case 322: {
            Language = input.ReadString();
            break;
          }
          case 402: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImMessageResponse : pb::IMessage<ImMessageResponse> {
    private static readonly pb::MessageParser<ImMessageResponse> _parser = new pb::MessageParser<ImMessageResponse>(() => new ImMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL_IM_Core.Protocol.ImMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageResponse(ImMessageResponse other) : this() {
      status_ = other.status_;
      output_ = other.output_;
      source_ = other.source_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageResponse Clone() {
      return new ImMessageResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 10;
    private global::HWL_IM_Core.Protocol.ImStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL_IM_Core.Protocol.ImStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 20;
    private string output_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Output {
      get { return output_; }
      set {
        output_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 30;
    private global::HWL_IM_Core.Protocol.ImMessageSource source_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL_IM_Core.Protocol.ImMessageSource Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Output != other.Output) return false;
      if (Source != other.Source) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Output.Length != 0) hash ^= Output.GetHashCode();
      if (Source != 0) hash ^= Source.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Status);
      }
      if (Output.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Output);
      }
      if (Source != 0) {
        output.WriteRawTag(240, 1);
        output.WriteEnum((int) Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Output.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Output);
      }
      if (Source != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Source);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Output.Length != 0) {
        Output = other.Output;
      }
      if (other.Source != 0) {
        Source = other.Source;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 80: {
            status_ = (global::HWL_IM_Core.Protocol.ImStatus) input.ReadEnum();
            break;
          }
          case 162: {
            Output = input.ReadString();
            break;
          }
          case 240: {
            source_ = (global::HWL_IM_Core.Protocol.ImMessageSource) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImUserValidateMessage : pb::IMessage<ImUserValidateMessage> {
    private static readonly pb::MessageParser<ImUserValidateMessage> _parser = new pb::MessageParser<ImUserValidateMessage>(() => new ImUserValidateMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImUserValidateMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL_IM_Core.Protocol.ImMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserValidateMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserValidateMessage(ImUserValidateMessage other) : this() {
      userId_ = other.userId_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserValidateMessage Clone() {
      return new ImUserValidateMessage(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 30;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 40;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImUserValidateMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImUserValidateMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(240, 1);
        output.WriteUInt64(UserId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(194, 2);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (Token.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImUserValidateMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 240: {
            UserId = input.ReadUInt64();
            break;
          }
          case 322: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImUserChatMessage : pb::IMessage<ImUserChatMessage> {
    private static readonly pb::MessageParser<ImUserChatMessage> _parser = new pb::MessageParser<ImUserChatMessage>(() => new ImUserChatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImUserChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL_IM_Core.Protocol.ImMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserChatMessage(ImUserChatMessage other) : this() {
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      contentType_ = other.contentType_;
      contentBody_ = other.contentBody_;
      buildTime_ = other.buildTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserChatMessage Clone() {
      return new ImUserChatMessage(this);
    }

    /// <summary>Field number for the "fromUserId" field.</summary>
    public const int FromUserIdFieldNumber = 10;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "toUserId" field.</summary>
    public const int ToUserIdFieldNumber = 20;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "contentType" field.</summary>
    public const int ContentTypeFieldNumber = 30;
    private string contentType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contentBody" field.</summary>
    public const int ContentBodyFieldNumber = 40;
    private string contentBody_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentBody {
      get { return contentBody_; }
      set {
        contentBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "buildTime" field.</summary>
    public const int BuildTimeFieldNumber = 50;
    private ulong buildTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BuildTime {
      get { return buildTime_; }
      set {
        buildTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImUserChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImUserChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      if (ContentType != other.ContentType) return false;
      if (ContentBody != other.ContentBody) return false;
      if (BuildTime != other.BuildTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (ContentBody.Length != 0) hash ^= ContentBody.GetHashCode();
      if (BuildTime != 0UL) hash ^= BuildTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(160, 1);
        output.WriteUInt64(ToUserId);
      }
      if (ContentType.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(ContentType);
      }
      if (ContentBody.Length != 0) {
        output.WriteRawTag(194, 2);
        output.WriteString(ContentBody);
      }
      if (BuildTime != 0UL) {
        output.WriteRawTag(144, 3);
        output.WriteUInt64(BuildTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (ContentType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (ContentBody.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContentBody);
      }
      if (BuildTime != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(BuildTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImUserChatMessage other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      if (other.ContentBody.Length != 0) {
        ContentBody = other.ContentBody;
      }
      if (other.BuildTime != 0UL) {
        BuildTime = other.BuildTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 80: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 160: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 242: {
            ContentType = input.ReadString();
            break;
          }
          case 322: {
            ContentBody = input.ReadString();
            break;
          }
          case 400: {
            BuildTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImGroupChatMessage : pb::IMessage<ImGroupChatMessage> {
    private static readonly pb::MessageParser<ImGroupChatMessage> _parser = new pb::MessageParser<ImGroupChatMessage>(() => new ImGroupChatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImGroupChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL_IM_Core.Protocol.ImMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImGroupChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImGroupChatMessage(ImGroupChatMessage other) : this() {
      fromUserId_ = other.fromUserId_;
      toGroup_ = other.toGroup_;
      contentType_ = other.contentType_;
      contentBody_ = other.contentBody_;
      buildTime_ = other.buildTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImGroupChatMessage Clone() {
      return new ImGroupChatMessage(this);
    }

    /// <summary>Field number for the "fromUserId" field.</summary>
    public const int FromUserIdFieldNumber = 10;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "toGroup" field.</summary>
    public const int ToGroupFieldNumber = 20;
    private string toGroup_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToGroup {
      get { return toGroup_; }
      set {
        toGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contentType" field.</summary>
    public const int ContentTypeFieldNumber = 30;
    private string contentType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contentBody" field.</summary>
    public const int ContentBodyFieldNumber = 40;
    private string contentBody_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentBody {
      get { return contentBody_; }
      set {
        contentBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "buildTime" field.</summary>
    public const int BuildTimeFieldNumber = 50;
    private ulong buildTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BuildTime {
      get { return buildTime_; }
      set {
        buildTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImGroupChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImGroupChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (ToGroup != other.ToGroup) return false;
      if (ContentType != other.ContentType) return false;
      if (ContentBody != other.ContentBody) return false;
      if (BuildTime != other.BuildTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToGroup.Length != 0) hash ^= ToGroup.GetHashCode();
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (ContentBody.Length != 0) hash ^= ContentBody.GetHashCode();
      if (BuildTime != 0UL) hash ^= BuildTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(FromUserId);
      }
      if (ToGroup.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ToGroup);
      }
      if (ContentType.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(ContentType);
      }
      if (ContentBody.Length != 0) {
        output.WriteRawTag(194, 2);
        output.WriteString(ContentBody);
      }
      if (BuildTime != 0UL) {
        output.WriteRawTag(144, 3);
        output.WriteUInt64(BuildTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToGroup.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ToGroup);
      }
      if (ContentType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (ContentBody.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContentBody);
      }
      if (BuildTime != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(BuildTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImGroupChatMessage other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToGroup.Length != 0) {
        ToGroup = other.ToGroup;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      if (other.ContentBody.Length != 0) {
        ContentBody = other.ContentBody;
      }
      if (other.BuildTime != 0UL) {
        BuildTime = other.BuildTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 80: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 162: {
            ToGroup = input.ReadString();
            break;
          }
          case 242: {
            ContentType = input.ReadString();
            break;
          }
          case 322: {
            ContentBody = input.ReadString();
            break;
          }
          case 400: {
            BuildTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
